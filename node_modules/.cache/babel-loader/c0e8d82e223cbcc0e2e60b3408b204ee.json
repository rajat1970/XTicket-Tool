{"ast":null,"code":"import _classCallCheck from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{cloneDeep}from'lodash';import TicketView from'../Views/TikcetView';import{fetch}from'../modules/httpServices';import{constants}from'../modules/constants';import axios from'axios';import FileSaver,{saveAs}from'file-saver';var TicketDetails=/*#__PURE__*/function(_Component){_inherits(TicketDetails,_Component);function TicketDetails(props){var _this;_classCallCheck(this,TicketDetails);_this=_possibleConstructorReturn(this,_getPrototypeOf(TicketDetails).call(this,props));_this.downloadFile=function(){axios({url:\"http://3.7.115.94/ticket-tool/v1/tickets/preview?filepath=/home/ec2-user/helpdesk_deploy/UPLOAD/3/Screenshot from 2020-05-22 12-06-33.jpg_1590465234624\",method:'GET',responseType:\"blob\"}).then(function(response){console.log(response);FileSaver.saveAs(response.data,\"hello.jpg\");});};_this.getTicketInfo=function(id){_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_state.isLoading=false;if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState(_state);}});});_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.TICKET_LISTING,requestParams:{page:0,limit:50},callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_state.isLoading=false;if(status===constants.SUCCESS){_state.message='';_state.listingData=payload.result.tickets;_state.listingData.sort(function(a,b){return a.id-b.id;});}else{_state.message=message;}_this.setState(_state);}});});_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.TICKET_REPLY+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message='';_state.ticketReplies=payload.result.conversations;}else{_state.message=message;}_this.setState({ticketReplies:_state.ticketReplies});}});});_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.TICKET_VIEW_ADMIN,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=\"\";_state.allAdminUsers=payload.data;}else{_state.message=message;}_this.setState({allAdminUsers:_state.allAdminUsers});}});});_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.TICKET_HISTORY+id,callbackHandler:function callbackHandler(response){var status=response.status,payload=response.payload,message=response.message;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=\"\";_state.ticketJourney=payload.result.ticketJourneys;}else{_state.message=message;}_this.setState({ticketJourney:_state.ticketJourney});}});});_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.GET_TICKET_STATUS,callbackHandler:function callbackHandler(response){var message=response.message,status=response.status,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=\"\";_state.allStatus=payload.data;}else{_state.message=message;}_this.setState({allStatus:_state.allStatus});}});});};_this.updateTicketData=function(id){_this.setState({isLoading:true},function(){fetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_state.isLoading=false;if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState(_state);}});});};_this.changeSelectValue=function(selectValue,ticketStatus){if(ticketStatus===\"CLOSED\"){alert('Cannot change assigned role the ticket is closed!');}else{var id=_this.props.match.params.ticket_id;_this.setState({statusChangeLoading:true},function(){fetch.put({url:constants.SERVICE_URLS.TICKET_ASSIGN+'/'+id+'?emailId='+selectValue,callbackHandler:function callbackHandler(response){console.log(response);fetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_this.setState({statusChangeLoading:false});if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState({ticketData:_state.ticketData});}});}});});}};_this.changeStatusValue=function(statusValue){var id=_this.props.match.params.ticket_id;_this.setState({statusChangeLoading:true},function(){fetch.put({url:constants.SERVICE_URLS.TICKET_STATUS+id+'?status='+statusValue,callbackHandler:function callbackHandler(response){// window.location.reload();\n_this.setState({statusChangeLoading:false});fetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_state.isLoading=false;if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState({ticketData:_state.ticketData});}});fetch.get({url:constants.SERVICE_URLS.TICKET_HISTORY+id,callbackHandler:function callbackHandler(response){var status=response.status,payload=response.payload,message=response.message;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=\"\";_state.ticketJourney=payload.result.ticketJourneys;}else{_state.message=message;}_this.setState({ticketJourney:_state.ticketJourney});}});}});});};_this.statusHandler=function(){var id=_this.props.match.params.ticket_id;_this.setState({statusChangeLoading:true},function(){fetch.put({url:constants.SERVICE_URLS.TICKET_STATUS+id+'?status=CLOSED',callbackHandler:function callbackHandler(response){// window.location.reload();\nfetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_this.setState({statusChangeLoading:false});if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState({ticketData:_state.ticketData});}});}});});};_this.fileSelect=function(e){var files=e.target.files;// let reader = new FileReader();\n// reader.readAsDataURL(files[0]);\n// reader.onload = (e) => {\n//     console.log(e.target.result)\n// }\n_this.setState({fileSelects:files[0]});};_this.replyChangeHandler=function(replyText){_this.setState({replyText:replyText});};_this.replySubmitHandler=function(replyOrComment){axios.interceptors.request.use(function(config){var token=window.localStorage.getItem('_token');config.headers['x-access-channel']='ANDROID';config.headers['Content-Type']='application/json';if(token!=null){config.headers.Authorization=\"Bearer \".concat(token);}return config;},function(err){return Promise.reject(err);});var id=_this.props.match.params.ticket_id;var request=JSON.stringify({text:_this.state.replyText,conversationType:\"Reply\",mailRecepients:_this.state.ticketData.emailId});var bodyFOrmData=new FormData();bodyFOrmData.append('request',request);bodyFOrmData.append('file',_this.state.fileSelects);// bodyFOrmData.set('conversationType', \"Reply\");\n// bodyFOrmData.set('mailRecepients', this.state.ticketData.emailId);\nif(replyOrComment===\"reply\"){_this.setState({statusChangeLoading:true},function(){axios({method:'post',url:constants.SERVICE_URLS.TICKET_REPLY+id,data:bodyFOrmData}).then(function(response){console.log(response);_this.setState({statusChangeLoading:false});});});}else{_this.setState(function(){fetch.post({url:constants.SERVICE_URLS.TICKET_REPLY+id,requestBody:{text:_this.state.replyText,conversationType:\"comment\"},callbackHandler:function callbackHandler(response){console.log(response);var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=message;window.location.reload();}}});});}};_this.resolutionChangeHandler=function(resolutionText){_this.setState({resolutionText:resolutionText});};_this.resolutionSubmitHandler=function(e){e.preventDefault();var id=_this.props.match.params.ticket_id;if(_this.state.resolutionText===null){alert(\"Resolution can't be empty!\");}else{_this.setState({statusChangeLoading:true},function(){fetch.post({url:constants.SERVICE_URLS.TICKET_RESOLUTION+id,requestBody:{text:_this.state.resolutionText},callbackHandler:function callbackHandler(response){_this.setState({statusChangeLoading:false});console.log(response);fetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);_state.isLoading=false;if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState(_state);}});}});});}};_this.state={fileSelects:null,img:null,ticketData:[],listingData:[],ticketReplies:[],allAdminUsers:[],ticketJourney:[],resolutionText:null,replyText:null,allStatus:[],isLoading:false,statusChangeLoading:false};return _this;}// componentWillUpdate(prevProps) {\n//     console.log(this.props)\n// }\n_createClass(TicketDetails,[{key:\"componentDidMount\",value:function componentDidMount(){var id=this.props.match.params.ticket_id;this.getTicketInfo(id);}},{key:\"render\",value:function render(){return React.createElement(TicketView,Object.assign({},this.state,{toggleReplyDisplay:this.toggleReplyDisplay,changeSelectValue:this.changeSelectValue,changeStatusValue:this.changeStatusValue,resolutionSubmitHandler:this.resolutionSubmitHandler,resolutionChangeHandler:this.resolutionChangeHandler,statusHandler:this.statusHandler,replyChangeHandler:this.replyChangeHandler,replySubmitHandler:this.replySubmitHandler,updateTicketData:this.updateTicketData,fileSelect:this.fileSelect,downloadFile:this.downloadFile}));}}]);return TicketDetails;}(Component);export default TicketDetails;/*\n\n\n                fetch.post({\n                    url: constants.SERVICE_URLS.TICKET_REPLY + url,\n                    requestBody: {\n                        // file: this.state.fileSelects,\n                        text: this.state.replyText,\n                        conversationType: \"Reply\",\n                        mailRecepients: this.state.ticketData.emailId\n                    },\n                    callbackHandler: (response) => {\n                        this.setState({ statusChangeLoading: false })\n                        const { status, message, payload } = response;\n                        const _state = cloneDeep(this.state);\n                        console.log(response)\n                        if (status === constants.SUCCESS) {\n                            _state.message = message;\n                            // window.location.reload();\n                            fetch.get({\n                                url: constants.SERVICE_URLS.TICKET_REPLY + '/' + id + '/replies',\n                                callbackHandler: (response) => {\n\n                                    const { status, message, payload } = response;\n\n                                    const _state = cloneDeep(this.state);\n\n                                    if (status === constants.SUCCESS) {\n                                        _state.message = '';\n                                        _state.ticketReplies = payload.result.conversations;\n\n                                    } else {\n                                        _state.message = message;\n                                    }\n                                    this.setState({ ticketReplies: _state.ticketReplies });\n\n                                }\n                            })\n                        }\n                    }\n                })*/","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/Components/TicketDetails.js"],"names":["React","Component","cloneDeep","TicketView","fetch","constants","axios","FileSaver","saveAs","TicketDetails","props","downloadFile","url","method","responseType","then","response","console","log","data","getTicketInfo","id","setState","isLoading","get","SERVICE_URLS","TICKET_DETAILING","callbackHandler","status","message","payload","_state","state","SUCCESS","ticketData","result","ticketDetails","TICKET_LISTING","requestParams","page","limit","listingData","tickets","sort","a","b","TICKET_REPLY","ticketReplies","conversations","TICKET_VIEW_ADMIN","allAdminUsers","TICKET_HISTORY","ticketJourney","ticketJourneys","GET_TICKET_STATUS","allStatus","updateTicketData","changeSelectValue","selectValue","ticketStatus","alert","match","params","ticket_id","statusChangeLoading","put","TICKET_ASSIGN","changeStatusValue","statusValue","TICKET_STATUS","statusHandler","fileSelect","e","files","target","fileSelects","replyChangeHandler","replyText","replySubmitHandler","replyOrComment","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","err","Promise","reject","JSON","stringify","text","conversationType","mailRecepients","emailId","bodyFOrmData","FormData","append","post","requestBody","location","reload","resolutionChangeHandler","resolutionText","resolutionSubmitHandler","preventDefault","TICKET_RESOLUTION","img","toggleReplyDisplay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { cloneDeep } from 'lodash';\nimport TicketView from '../Views/TikcetView';\nimport { fetch } from '../modules/httpServices'\nimport { constants } from '../modules/constants';\nimport axios from 'axios';\nimport FileSaver, { saveAs } from 'file-saver'\n\nclass TicketDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fileSelects: null,\n            img: null,\n            ticketData: [],\n            listingData: [],\n            ticketReplies: [],\n            allAdminUsers: [],\n            ticketJourney: [],\n            resolutionText: null,\n            replyText: null,\n            allStatus: [],\n            isLoading: false,\n            statusChangeLoading: false\n        }\n    }\n\n    // componentWillUpdate(prevProps) {\n    //     console.log(this.props)\n    // }\n\n    componentDidMount() {\n        let id = this.props.match.params.ticket_id;\n        this.getTicketInfo(id);\n    }\n\n\n\n    downloadFile = () => {\n\n        axios({\n            url: \"http://3.7.115.94/ticket-tool/v1/tickets/preview?filepath=/home/ec2-user/helpdesk_deploy/UPLOAD/3/Screenshot from 2020-05-22 12-06-33.jpg_1590465234624\",\n            method: 'GET',\n            responseType: \"blob\"\n        }).then((response) => {\n            console.log(response)\n            FileSaver.saveAs(response.data, \"hello.jpg\");\n\n\n        });\n    }\n\n    getTicketInfo = (id) => {\n\n\n\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n                callbackHandler: (response) => {\n                    const { status, message, payload } = response;\n                    const _state = cloneDeep(this.state);\n\n                    _state.isLoading = false;\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = '';\n                        _state.ticketData = payload.result.ticketDetails;\n                    } else {\n                        _state.message = message;\n                    }\n                    this.setState(_state);\n                }\n            })\n        })\n\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.TICKET_LISTING,\n                requestParams: {\n                    page: 0,\n                    limit: 50\n                },\n                callbackHandler: (response) => {\n                    const { status, message, payload } = response;\n                    const _state = cloneDeep(this.state);\n                    _state.isLoading = false;\n\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = '';\n                        _state.listingData = payload.result.tickets;\n                        _state.listingData.sort((a, b) => a.id - b.id)\n\n                    } else {\n                        _state.message = message;\n                    }\n\n                    this.setState(_state);\n\n                }\n            })\n        })\n\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.TICKET_REPLY + id,\n                callbackHandler: (response) => {\n\n                    const { status, message, payload } = response;\n\n                    const _state = cloneDeep(this.state);\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = '';\n                        _state.ticketReplies = payload.result.conversations;\n\n                    } else {\n                        _state.message = message;\n                    }\n                    this.setState({ ticketReplies: _state.ticketReplies });\n\n                }\n            })\n        })\n\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.TICKET_VIEW_ADMIN,\n                callbackHandler: (response) => {\n                    const { status, message, payload } = response;\n\n                    const _state = cloneDeep(this.state);\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = \"\";\n                        _state.allAdminUsers = payload.data;\n\n                    } else {\n                        _state.message = message\n                    }\n                    this.setState({ allAdminUsers: _state.allAdminUsers })\n                }\n            })\n        })\n\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.TICKET_HISTORY + id,\n                callbackHandler: (response) => {\n                    const { status, payload, message } = response;\n\n                    const _state = cloneDeep(this.state);\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = \"\";\n                        _state.ticketJourney = payload.result.ticketJourneys;\n\n\n                    } else {\n                        _state.message = message;\n                    }\n                    this.setState({ ticketJourney: _state.ticketJourney })\n                }\n            })\n        })\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.GET_TICKET_STATUS,\n                callbackHandler: (response) => {\n                    const { message, status, payload } = response;\n                    const _state = cloneDeep(this.state);\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = \"\";\n                        _state.allStatus = payload.data;\n                    } else {\n                        _state.message = message;\n                    }\n                    this.setState({ allStatus: _state.allStatus })\n                }\n            })\n\n        })\n    }\n\n    updateTicketData = (id) => {\n        this.setState({ isLoading: true }, () => {\n            fetch.get({\n                url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n                callbackHandler: (response) => {\n                    const { status, message, payload } = response;\n                    const _state = cloneDeep(this.state);\n\n                    _state.isLoading = false;\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = '';\n                        _state.ticketData = payload.result.ticketDetails;\n                    } else {\n                        _state.message = message;\n                    }\n                    this.setState(_state);\n                }\n            })\n        })\n    }\n\n    changeSelectValue = (selectValue, ticketStatus) => {\n        if (ticketStatus === \"CLOSED\") {\n            alert('Cannot change assigned role the ticket is closed!');\n        } else {\n\n            const id = this.props.match.params.ticket_id;\n            this.setState({ statusChangeLoading: true }, () => {\n                fetch.put({\n                    url: constants.SERVICE_URLS.TICKET_ASSIGN + '/' + id + '?emailId=' + selectValue,\n                    callbackHandler: (response) => {\n                        console.log(response);\n                        fetch.get({\n                            url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n                            callbackHandler: (response) => {\n                                const { status, message, payload } = response;\n                                const _state = cloneDeep(this.state);\n\n                                this.setState({ statusChangeLoading: false })\n                                if (status === constants.SUCCESS) {\n                                    _state.message = '';\n                                    _state.ticketData = payload.result.ticketDetails;\n                                } else {\n                                    _state.message = message;\n                                }\n                                this.setState({ ticketData: _state.ticketData });\n                            }\n                        })\n                    }\n                })\n            })\n\n\n        }\n\n    }\n\n    changeStatusValue = (statusValue) => {\n        const id = this.props.match.params.ticket_id;\n\n        this.setState({ statusChangeLoading: true }, () => {\n            fetch.put({\n                url: constants.SERVICE_URLS.TICKET_STATUS + id + '?status=' + statusValue,\n                callbackHandler: (response) => {\n                    // window.location.reload();\n                    this.setState({ statusChangeLoading: false });\n                    fetch.get({\n                        url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n                        callbackHandler: (response) => {\n                            const { status, message, payload } = response;\n                            const _state = cloneDeep(this.state);\n\n                            _state.isLoading = false;\n\n                            if (status === constants.SUCCESS) {\n                                _state.message = '';\n                                _state.ticketData = payload.result.ticketDetails;\n                            } else {\n                                _state.message = message;\n                            }\n                            this.setState({ ticketData: _state.ticketData });\n                        }\n                    })\n\n                    fetch.get({\n                        url: constants.SERVICE_URLS.TICKET_HISTORY + id,\n                        callbackHandler: (response) => {\n                            const { status, payload, message } = response;\n\n                            const _state = cloneDeep(this.state);\n\n                            if (status === constants.SUCCESS) {\n                                _state.message = \"\";\n                                _state.ticketJourney = payload.result.ticketJourneys;\n\n\n                            } else {\n                                _state.message = message;\n                            }\n                            this.setState({ ticketJourney: _state.ticketJourney })\n                        }\n                    })\n\n\n                }\n            })\n        })\n\n\n    }\n    statusHandler = () => {\n\n        const id = this.props.match.params.ticket_id;\n        this.setState({ statusChangeLoading: true }, () => {\n            fetch.put({\n                url: constants.SERVICE_URLS.TICKET_STATUS + id + '?status=CLOSED',\n                callbackHandler: (response) => {\n                    // window.location.reload();\n                    fetch.get({\n                        url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n                        callbackHandler: (response) => {\n                            const { status, message, payload } = response;\n                            const _state = cloneDeep(this.state);\n\n                            this.setState({ statusChangeLoading: false })\n                            if (status === constants.SUCCESS) {\n                                _state.message = '';\n                                _state.ticketData = payload.result.ticketDetails;\n                            } else {\n                                _state.message = message;\n                            }\n                            this.setState({ ticketData: _state.ticketData });\n                        }\n                    })\n                }\n            })\n        })\n\n    }\n\n    fileSelect = (e) => {\n        let files = e.target.files;\n\n        // let reader = new FileReader();\n        // reader.readAsDataURL(files[0]);\n        // reader.onload = (e) => {\n        //     console.log(e.target.result)\n        // }\n        this.setState({ fileSelects: files[0] })\n\n\n    }\n    replyChangeHandler = (replyText) => {\n        this.setState({ replyText: replyText });\n    }\n\n\n    replySubmitHandler = (replyOrComment) => {\n        axios.interceptors.request.use(function (config) {\n            const token = window.localStorage.getItem('_token');\n\n            config.headers['x-access-channel'] = 'ANDROID';\n            config.headers['Content-Type'] = 'application/json';\n\n            if (token != null) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n\n            return config;\n        }, function (err) {\n\n            return Promise.reject(err);\n\n        });\n\n\n        const id = this.props.match.params.ticket_id;\n\n        const request = JSON.stringify({\n            text: this.state.replyText,\n            conversationType: \"Reply\",\n            mailRecepients: this.state.ticketData.emailId\n        });\n        const bodyFOrmData = new FormData();\n\n\n        bodyFOrmData.append('request', request);\n        bodyFOrmData.append('file', this.state.fileSelects)\n        // bodyFOrmData.set('conversationType', \"Reply\");\n        // bodyFOrmData.set('mailRecepients', this.state.ticketData.emailId);\n        if (replyOrComment === \"reply\") {\n            this.setState({ statusChangeLoading: true }, () => {\n\n                axios({\n                    method: 'post',\n                    url: constants.SERVICE_URLS.TICKET_REPLY + id,\n                    data: bodyFOrmData\n                })\n                    .then((response) => {\n                        console.log(response)\n                        this.setState({ statusChangeLoading: false })\n                    })\n            })\n        } else {\n            this.setState(() => {\n                fetch.post({\n                    url: constants.SERVICE_URLS.TICKET_REPLY + id,\n                    requestBody: {\n                        text: this.state.replyText,\n                        conversationType: \"comment\"\n                    },\n                    callbackHandler: (response) => {\n                        console.log(response);\n                        const { status, message, payload } = response;\n                        const _state = cloneDeep(this.state);\n\n                        if (status === constants.SUCCESS) {\n                            _state.message = message;\n                            window.location.reload();\n                        }\n                    }\n                })\n            })\n        }\n    }\n\n    resolutionChangeHandler = (resolutionText) => {\n        this.setState({ resolutionText: resolutionText })\n    }\n\n    resolutionSubmitHandler = (e) => {\n        e.preventDefault();\n        const id = this.props.match.params.ticket_id;\n        if (this.state.resolutionText === null) {\n            alert(\"Resolution can't be empty!\")\n        } else {\n            this.setState({ statusChangeLoading: true }, () => {\n                fetch.post({\n                    url: constants.SERVICE_URLS.TICKET_RESOLUTION + id,\n                    requestBody: {\n                        text: this.state.resolutionText\n                    },\n                    callbackHandler: (response) => {\n                        this.setState({ statusChangeLoading: false });\n                        console.log(response);\n                        fetch.get({\n                            url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n                            callbackHandler: (response) => {\n                                const { status, message, payload } = response;\n                                const _state = cloneDeep(this.state);\n\n                                _state.isLoading = false;\n\n                                if (status === constants.SUCCESS) {\n                                    _state.message = '';\n                                    _state.ticketData = payload.result.ticketDetails;\n                                } else {\n                                    _state.message = message;\n                                }\n                                this.setState(_state);\n                            }\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n\n    render() {\n        return (\n            <TicketView\n                {...this.state}\n                toggleReplyDisplay={this.toggleReplyDisplay}\n                changeSelectValue={this.changeSelectValue}\n                changeStatusValue={this.changeStatusValue}\n                resolutionSubmitHandler={this.resolutionSubmitHandler}\n                resolutionChangeHandler={this.resolutionChangeHandler}\n                statusHandler={this.statusHandler}\n                replyChangeHandler={this.replyChangeHandler}\n                replySubmitHandler={this.replySubmitHandler}\n                updateTicketData={this.updateTicketData}\n                fileSelect={this.fileSelect}\n                downloadFile={this.downloadFile}\n            />\n\n        )\n    }\n}\n\nexport default TicketDetails;\n\n\n/*\n\n\n                fetch.post({\n                    url: constants.SERVICE_URLS.TICKET_REPLY + url,\n                    requestBody: {\n                        // file: this.state.fileSelects,\n                        text: this.state.replyText,\n                        conversationType: \"Reply\",\n                        mailRecepients: this.state.ticketData.emailId\n                    },\n                    callbackHandler: (response) => {\n                        this.setState({ statusChangeLoading: false })\n                        const { status, message, payload } = response;\n                        const _state = cloneDeep(this.state);\n                        console.log(response)\n                        if (status === constants.SUCCESS) {\n                            _state.message = message;\n                            // window.location.reload();\n                            fetch.get({\n                                url: constants.SERVICE_URLS.TICKET_REPLY + '/' + id + '/replies',\n                                callbackHandler: (response) => {\n\n                                    const { status, message, payload } = response;\n\n                                    const _state = cloneDeep(this.state);\n\n                                    if (status === constants.SUCCESS) {\n                                        _state.message = '';\n                                        _state.ticketReplies = payload.result.conversations;\n\n                                    } else {\n                                        _state.message = message;\n                                    }\n                                    this.setState({ ticketReplies: _state.ticketReplies });\n\n                                }\n                            })\n                        }\n                    }\n                })*/"]},"metadata":{},"sourceType":"module"}
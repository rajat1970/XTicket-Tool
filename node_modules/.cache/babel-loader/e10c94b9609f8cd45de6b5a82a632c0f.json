{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/pages/TicketListingPage.js\";\nimport React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { constants } from '../modules/constants';\nimport { fetch } from '../modules/httpServices';\nimport TestView from '../Views/TestView';\nimport { ticketListingView as TicketListingView } from '../Views/ticketListingView';\nimport { sidebarView } from '../Views/sidebarView';\nexport default class TicketListingPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getTicketData = () => {\n      fetch.get({\n        url: constants.SERVICE_URLS.TICKET_LISTING,\n        requestParams: {\n          page: 0,\n          limit: 50\n        },\n        callbackHandler: response => {\n          const {\n            status,\n            message,\n            payload\n          } = response;\n\n          const _state = cloneDeep(this.state);\n\n          _state.isLoading = false;\n          console.log(response);\n\n          if (status === constants.SUCCESS) {\n            _state.message = '';\n            _state.listingData = payload.result.tickets;\n\n            _state.listingData.sort((a, b) => a.id - b.id);\n\n            console.log(_state.listingData);\n          } else {\n            _state.message = message;\n          }\n\n          this.setState(_state);\n        }\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      listingData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTicketData();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TestView, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/pages/TicketListingPage.js"],"names":["React","cloneDeep","constants","fetch","TestView","ticketListingView","TicketListingView","sidebarView","TicketListingPage","Component","constructor","props","getTicketData","get","url","SERVICE_URLS","TICKET_LISTING","requestParams","page","limit","callbackHandler","response","status","message","payload","_state","state","isLoading","console","log","SUCCESS","listingData","result","tickets","sort","a","b","id","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,iBAAiB,IAAIC,iBAA9B,QAAuD,4BAAvD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,eAAe,MAAMC,iBAAN,SAAgCR,KAAK,CAACS,SAAtC,CAAgD;AAE3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,aAZmB,GAYH,MAAM;AAClBT,MAAAA,KAAK,CAACU,GAAN,CAAU;AACNC,QAAAA,GAAG,EAAEZ,SAAS,CAACa,YAAV,CAAuBC,cADtB;AAENC,QAAAA,aAAa,EAAE;AACXC,UAAAA,IAAI,EAAE,CADK;AAEXC,UAAAA,KAAK,EAAE;AAFI,SAFT;AAMNC,QAAAA,eAAe,EAAGC,QAAD,IAAc;AAC3B,gBAAM;AAAEC,YAAAA,MAAF;AAAUC,YAAAA,OAAV;AAAmBC,YAAAA;AAAnB,cAA+BH,QAArC;;AACA,gBAAMI,MAAM,GAAGxB,SAAS,CAAC,KAAKyB,KAAN,CAAxB;;AACAD,UAAAA,MAAM,CAACE,SAAP,GAAmB,KAAnB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;;AAEA,cAAIC,MAAM,KAAKpB,SAAS,CAAC4B,OAAzB,EAAkC;AAC9BL,YAAAA,MAAM,CAACF,OAAP,GAAiB,EAAjB;AACAE,YAAAA,MAAM,CAACM,WAAP,GAAqBP,OAAO,CAACQ,MAAR,CAAeC,OAApC;;AACAR,YAAAA,MAAM,CAACM,WAAP,CAAmBG,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAA3C;;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACM,WAAnB;AACH,WALD,MAKO;AACHN,YAAAA,MAAM,CAACF,OAAP,GAAiBA,OAAjB;AACH;;AAED,eAAKe,QAAL,CAAcb,MAAd;AAEH;AAvBK,OAAV;AAyBH,KAtCkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETI,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAK3B,aAAL;AACH;;AA8BD4B,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,QAAD,oBAAc,KAAKd,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALJ,CADJ;AAUH;;AArD0D","sourcesContent":["import React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { constants } from '../modules/constants';\nimport { fetch } from '../modules/httpServices';\nimport TestView from '../Views/TestView';\nimport { ticketListingView as TicketListingView } from '../Views/ticketListingView';\nimport { sidebarView } from '../Views/sidebarView'\n\nexport default class TicketListingPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            listingData: []\n        }\n    }\n\n    componentDidMount() {\n        this.getTicketData();\n    }\n\n    getTicketData = () => {\n        fetch.get({\n            url: constants.SERVICE_URLS.TICKET_LISTING,\n            requestParams: {\n                page: 0,\n                limit: 50\n            },\n            callbackHandler: (response) => {\n                const { status, message, payload } = response;\n                const _state = cloneDeep(this.state);\n                _state.isLoading = false;\n                console.log(response)\n\n                if (status === constants.SUCCESS) {\n                    _state.message = '';\n                    _state.listingData = payload.result.tickets;\n                    _state.listingData.sort((a, b) => a.id - b.id)\n                    console.log(_state.listingData);\n                } else {\n                    _state.message = message;\n                }\n\n                this.setState(_state);\n\n            }\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                {/* <TicketListingView\n                    {...this.state}\n                /> */}\n                <TestView {...this.state} />\n            </React.Fragment>\n        );\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}
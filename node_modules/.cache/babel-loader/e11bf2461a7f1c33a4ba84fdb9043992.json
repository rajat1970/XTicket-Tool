{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/src/Components/Tickets.js\";\nimport React, { Component } from 'react';\nimport TicketListNav from '../Views/sidebarView';\nimport AddTicket from '../Views/addTicket';\nimport { constants } from '../modules/constants';\nimport { fetch } from '../modules/httpServices';\n\nclass Tickets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      const {\n        selectedLocation,\n        selectedDepartment,\n        selectedClassification,\n        selectedSubIssue,\n        subject,\n        description\n      } = this.state;\n      fetch.post({\n        url: constants.SERVICE_URLS.TICKET_ADD,\n        requestBody: {\n          \"locationId\": selectedLocation,\n          \"departmentId\": selectedDepartment,\n          \"subIssueId\": selectedSubIssue,\n          \"classificationId\": selectedClassification,\n          \"subject\": subject,\n          \"description\": description\n        },\n        callbackHandler: response => {\n          console.log(response);\n          this.props.history.push('/ticketlist');\n        }\n      });\n    };\n\n    this.state = {\n      all_locations: null,\n      all_departments: null,\n      all_classifications: null,\n      selectedLocation: null,\n      selectedDepartment: null,\n      selectedClassification: null,\n      selectedSubIssue: null,\n      subject: \"\",\n      description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch.get({\n      url: constants.SERVICE_URLS.TICKET_MASTER_DATA + 'locations',\n      callbackHandler: response => {\n        this.setState({\n          all_locations: response.payload.data\n        });\n      }\n    });\n    fetch.get({\n      url: constants.SERVICE_URLS.TICKET_MASTER_DATA + 'departments',\n      callbackHandler: response => {\n        this.setState({\n          all_departments: response.payload.result\n        });\n      }\n    });\n    fetch.get({\n      url: constants.SERVICE_URLS.TICKET_MASTER_DATA + 'classifications',\n      callbackHandler: response => {\n        this.setState({\n          all_classifications: response.payload.data\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-tickets-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(AddTicket, Object.assign({ ...this.state,\n      onChangeHandler: this.onChangeHandler,\n      onSubmitHandler: this.onSubmitHandler\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Tickets;","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/src/Components/Tickets.js"],"names":["React","Component","TicketListNav","AddTicket","constants","fetch","Tickets","constructor","props","onChangeHandler","e","setState","target","id","value","onSubmitHandler","preventDefault","selectedLocation","selectedDepartment","selectedClassification","selectedSubIssue","subject","description","state","post","url","SERVICE_URLS","TICKET_ADD","requestBody","callbackHandler","response","console","log","history","push","all_locations","all_departments","all_classifications","componentDidMount","get","TICKET_MASTER_DATA","payload","data","result","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,yBAAtB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsCnBC,eAtCmB,GAsCAC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAA1B,OAAd;AACH,KAxCkB;;AAAA,SA0CnBC,eA1CmB,GA0CAL,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAEC,QAAAA,gBAAF;AAAoBC,QAAAA,kBAApB;AAAwCC,QAAAA,sBAAxC;AAAgEC,QAAAA,gBAAhE;AAAkFC,QAAAA,OAAlF;AAA2FC,QAAAA;AAA3F,UAA2G,KAAKC,KAAtH;AACAlB,MAAAA,KAAK,CAACmB,IAAN,CAAW;AACPC,QAAAA,GAAG,EAAErB,SAAS,CAACsB,YAAV,CAAuBC,UADrB;AAEPC,QAAAA,WAAW,EAAE;AACT,wBAAcX,gBADL;AAET,0BAAgBC,kBAFP;AAGT,wBAAcE,gBAHL;AAIT,8BAAoBD,sBAJX;AAKT,qBAAWE,OALF;AAMT,yBAAeC;AANN,SAFN;AAUPO,QAAAA,eAAe,EAAGC,QAAD,IAAc;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAKtB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACH;AAbM,OAAX;AAeH,KA5DkB;;AAEf,SAAKX,KAAL,GAAa;AACTY,MAAAA,aAAa,EAAE,IADN;AAETC,MAAAA,eAAe,EAAE,IAFR;AAGTC,MAAAA,mBAAmB,EAAE,IAHZ;AAITpB,MAAAA,gBAAgB,EAAE,IAJT;AAKTC,MAAAA,kBAAkB,EAAE,IALX;AAMTC,MAAAA,sBAAsB,EAAE,IANf;AAOTC,MAAAA,gBAAgB,EAAE,IAPT;AAQTC,MAAAA,OAAO,EAAE,EARA;AASTC,MAAAA,WAAW,EAAE;AATJ,KAAb;AAWH;;AACDgB,EAAAA,iBAAiB,GAAG;AAChBjC,IAAAA,KAAK,CAACkC,GAAN,CAAU;AACNd,MAAAA,GAAG,EAAErB,SAAS,CAACsB,YAAV,CAAuBc,kBAAvB,GAA4C,WAD3C;AAENX,MAAAA,eAAe,EAAGC,QAAD,IAAc;AAC3B,aAAKnB,QAAL,CAAc;AAAEwB,UAAAA,aAAa,EAAEL,QAAQ,CAACW,OAAT,CAAiBC;AAAlC,SAAd;AACH;AAJK,KAAV;AAOArC,IAAAA,KAAK,CAACkC,GAAN,CAAU;AACNd,MAAAA,GAAG,EAAErB,SAAS,CAACsB,YAAV,CAAuBc,kBAAvB,GAA4C,aAD3C;AAENX,MAAAA,eAAe,EAAGC,QAAD,IAAc;AAC3B,aAAKnB,QAAL,CAAc;AAAEyB,UAAAA,eAAe,EAAEN,QAAQ,CAACW,OAAT,CAAiBE;AAApC,SAAd;AACH;AAJK,KAAV;AAOAtC,IAAAA,KAAK,CAACkC,GAAN,CAAU;AACNd,MAAAA,GAAG,EAAErB,SAAS,CAACsB,YAAV,CAAuBc,kBAAvB,GAA4C,iBAD3C;AAENX,MAAAA,eAAe,EAAGC,QAAD,IAAc;AAC3B,aAAKnB,QAAL,CAAc;AAAE0B,UAAAA,mBAAmB,EAAEP,QAAQ,CAACW,OAAT,CAAiBC;AAAxC,SAAd;AACH;AAJK,KAAV;AAOH;;AAyBDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD,gBACQ,EACA,GAAG,KAAKrB,KADR;AAEAd,MAAAA,eAAe,EAAE,KAAKA,eAFtB;AAGAM,MAAAA,eAAe,EAAE,KAAKA;AAHtB,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADJ;AAYH;;AA3E2B;;AA8EhC,eAAeT,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport TicketListNav from '../Views/sidebarView';\nimport AddTicket from '../Views/addTicket';\nimport { constants } from '../modules/constants';\nimport { fetch } from '../modules/httpServices';\n\nclass Tickets extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            all_locations: null,\n            all_departments: null,\n            all_classifications: null,\n            selectedLocation: null,\n            selectedDepartment: null,\n            selectedClassification: null,\n            selectedSubIssue: null,\n            subject: \"\",\n            description: \"\"\n        }\n    }\n    componentDidMount() {\n        fetch.get({\n            url: constants.SERVICE_URLS.TICKET_MASTER_DATA + 'locations',\n            callbackHandler: (response) => {\n                this.setState({ all_locations: response.payload.data })\n            }\n        })\n\n        fetch.get({\n            url: constants.SERVICE_URLS.TICKET_MASTER_DATA + 'departments',\n            callbackHandler: (response) => {\n                this.setState({ all_departments: response.payload.result });\n            }\n        })\n\n        fetch.get({\n            url: constants.SERVICE_URLS.TICKET_MASTER_DATA + 'classifications',\n            callbackHandler: (response) => {\n                this.setState({ all_classifications: response.payload.data });\n            }\n        })\n\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        const { selectedLocation, selectedDepartment, selectedClassification, selectedSubIssue, subject, description } = this.state\n        fetch.post({\n            url: constants.SERVICE_URLS.TICKET_ADD,\n            requestBody: {\n                \"locationId\": selectedLocation,\n                \"departmentId\": selectedDepartment,\n                \"subIssueId\": selectedSubIssue,\n                \"classificationId\": selectedClassification,\n                \"subject\": subject,\n                \"description\": description\n            },\n            callbackHandler: (response) => {\n                console.log(response)\n                this.props.history.push('/ticketlist')\n            }\n        })\n    }\n    render() {\n        return (\n            <div className=\"add-tickets-wrapper\">\n                {/* <TicketListNav /> */}\n                <AddTicket\n                    {...{\n                        ...this.state,\n                        onChangeHandler: this.onChangeHandler,\n                        onSubmitHandler: this.onSubmitHandler\n                    }} />\n            </div>\n\n        )\n    }\n}\n\nexport default Tickets;"]},"metadata":{},"sourceType":"module"}
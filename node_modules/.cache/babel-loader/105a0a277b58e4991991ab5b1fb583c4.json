{"ast":null,"code":"import _classCallCheck from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import TicketReplyNav from'../Views/ticketReplyNav';import TicketReplyBottomContainer from'../Views/ticketReplyBottomContainer';import{fetch}from'../modules/httpServices';import{constants}from'../modules/constants';import{cloneDeep}from'lodash';var Reply=/*#__PURE__*/function(_Component){_inherits(Reply,_Component);function Reply(props){var _this;_classCallCheck(this,Reply);_this=_possibleConstructorReturn(this,_getPrototypeOf(Reply).call(this,props));_this.getTicketInfo=function(id){fetch.get({url:constants.SERVICE_URLS.TICKET_REPLY+'/'+id+'/replies',callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message='';_state.replies=payload.result.conversations;}else{_state.message=message;}_this.setState({replies:_state.replies});}});fetch.get({url:constants.SERVICE_URLS.TICKET_DETAILING+'/'+id,callbackHandler:function callbackHandler(response){var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);console.log(response);if(status===constants.SUCCESS){_state.message='';_state.ticketData=payload.result.ticketDetails;}else{_state.message=message;}_this.setState({ticketData:_state.ticketData});}});};_this.handleChange=function(text){_this.setState({text:text});};_this.handleCommentReply=function(commentReply){_this.setState({commentReply:commentReply});};_this.handleSubmit=function(commentReply){console.log(commentReply);var ticket_id=_this.props.match.params.ticket_id;var url='/'+ticket_id+'/replies';_this.setState({ticket_id:ticket_id});var _this$state=_this.state,text=_this$state.text,ticketData=_this$state.ticketData;commentReply===\"reply\"?_this.setState(function(){fetch.post({url:constants.SERVICE_URLS.TICKET_REPLY+url,requestBody:{text:text,conversationType:\"Reply\",mailRecepients:ticketData.emailId},callbackHandler:function callbackHandler(response){console.log(response);var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=message;window.location.reload();}}});}):_this.setState(function(){fetch.post({url:constants.SERVICE_URLS.TICKET_REPLY+url,requestBody:{text:text,conversationType:\"comment\"},callbackHandler:function callbackHandler(response){console.log(response);var status=response.status,message=response.message,payload=response.payload;var _state=cloneDeep(_this.state);if(status===constants.SUCCESS){_state.message=message;window.location.reload();}}});});};_this.state={text:'',ticket_id:0,replies:[],ticketData:[],commentReply:\"reply\"};return _this;}_createClass(Reply,[{key:\"componentDidMount\",value:function componentDidMount(){var id=this.props.match.params.ticket_id;this.getTicketInfo(id);}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"Ticket-Reply-Container\"},React.createElement(TicketReplyNav,null),React.createElement(TicketReplyBottomContainer,Object.assign({handleChange:this.handleChange,handleSubmit:this.handleSubmit},this.state,{props:this.props,handleCommentReply:this.handleCommentReply})));}}]);return Reply;}(Component);export default Reply;","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/pages/ReplyPage.js"],"names":["React","Component","TicketReplyNav","TicketReplyBottomContainer","fetch","constants","cloneDeep","Reply","props","getTicketInfo","id","get","url","SERVICE_URLS","TICKET_REPLY","callbackHandler","response","status","message","payload","_state","state","SUCCESS","replies","result","conversations","setState","TICKET_DETAILING","console","log","ticketData","ticketDetails","handleChange","text","handleCommentReply","commentReply","handleSubmit","ticket_id","match","params","post","requestBody","conversationType","mailRecepients","emailId","window","location","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TicketReplyNav from '../Views/ticketReplyNav';\nimport TicketReplyBottomContainer from '../Views/ticketReplyBottomContainer';\nimport { fetch } from '../modules/httpServices';\nimport { constants } from '../modules/constants';\nimport { cloneDeep } from 'lodash';\n\n\nclass Reply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            ticket_id: 0,\n            replies: [],\n            ticketData: [],\n            commentReply: \"reply\"\n        }\n    }\n\n    componentDidMount() {\n        const id = this.props.match.params.ticket_id\n        this.getTicketInfo(id);\n    }\n\n\n    getTicketInfo = (id) => {\n        fetch.get({\n            url: constants.SERVICE_URLS.TICKET_REPLY + '/' + id + '/replies',\n            callbackHandler: (response) => {\n                const { status, message, payload } = response;\n                const _state = cloneDeep(this.state)\n                if (status === constants.SUCCESS) {\n                    _state.message = '';\n                    _state.replies = payload.result.conversations;\n                } else {\n                    _state.message = message;\n                }\n                this.setState({ replies: _state.replies })\n            }\n        })\n\n        fetch.get({\n            url: constants.SERVICE_URLS.TICKET_DETAILING + '/' + id,\n            callbackHandler: (response) => {\n                const { status, message, payload } = response;\n                const _state = cloneDeep(this.state);\n                console.log(response)\n                if (status === constants.SUCCESS) {\n                    _state.message = '';\n                    _state.ticketData = payload.result.ticketDetails;\n                } else {\n                    _state.message = message;\n                }\n\n                this.setState({ ticketData: _state.ticketData });\n\n            }\n        })\n    }\n\n    // timestampToDate = () => {\n    //     const creationTime = new Date(this.state.ticketData.creationTime);\n    //     const dueOn = new Date(this.state.ticketData.dueOn)\n\n    //     var month = new Array();\n    //     month[0] = \"January\";\n    //     month[1] = \"February\";\n    //     month[2] = \"March\";\n    //     month[3] = \"April\";\n    //     month[4] = \"May\";\n    //     month[5] = \"June\";\n    //     month[6] = \"July\";\n    //     month[7] = \"August\";\n    //     month[8] = \"September\";\n    //     month[9] = \"October\";\n    //     month[10] = \"November\";\n    //     month[11] = \"December\";\n\n    //     const creationMonth = month[creationTime.getMonth()];\n    //     const dueOnMonth = month[dueOn.getMonth()];\n    //     console.log(creationMonth)\n    // }\n\n    handleChange = (text) => {\n        this.setState({ text: text });\n    }\n\n\n    handleCommentReply = (commentReply) => {\n        this.setState({ commentReply: commentReply })\n    }\n\n\n    handleSubmit = (commentReply) => {\n\n        console.log(commentReply);\n        const ticket_id = this.props.match.params.ticket_id;\n        const url = '/' + ticket_id + '/replies';\n        this.setState({ ticket_id: ticket_id });\n        const { text, ticketData } = this.state;\n        commentReply === \"reply\" ?\n            this.setState(() => {\n                fetch.post({\n                    url: constants.SERVICE_URLS.TICKET_REPLY + url,\n                    requestBody: {\n                        text: text,\n                        conversationType: \"Reply\",\n                        mailRecepients: ticketData.emailId\n                    },\n                    callbackHandler: (response) => {\n                        console.log(response);\n                        const { status, message, payload } = response;\n                        const _state = cloneDeep(this.state);\n\n                        if (status === constants.SUCCESS) {\n                            _state.message = message;\n                            window.location.reload();\n                        }\n                    }\n                })\n            }) :\n            this.setState(() => {\n                fetch.post({\n                    url: constants.SERVICE_URLS.TICKET_REPLY + url,\n                    requestBody: {\n                        text: text,\n                        conversationType: \"comment\"\n                    },\n                    callbackHandler: (response) => {\n                        console.log(response);\n                        const { status, message, payload } = response;\n                        const _state = cloneDeep(this.state);\n\n                        if (status === constants.SUCCESS) {\n                            _state.message = message;\n                            window.location.reload();\n                        }\n                    }\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"Ticket-Reply-Container\">\n                <TicketReplyNav />\n                <TicketReplyBottomContainer\n                    handleChange={this.handleChange}\n                    handleSubmit={this.handleSubmit}\n                    {...this.state}\n                    props={this.props}\n                    handleCommentReply={this.handleCommentReply}\n                />\n            </div>\n\n        )\n    }\n}\n\nexport default Reply;"]},"metadata":{},"sourceType":"module"}
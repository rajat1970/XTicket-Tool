{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/Views/loginPage.jsx\";\nimport React from 'react';\nimport { isEmpty, toString } from 'lodash';\nimport Loader from 'react-loader-spinner';\nexport const loginPages = payload => {\n  const {\n    email,\n    password,\n    onInputChange,\n    onSubmitHandler,\n    isValid,\n    isLoading\n  } = payload;\n  const isDisabledButton = isEmpty(toString(email)) || isEmpty(toString(password));\n  return React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"login-text-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Help Desk Login\"), React.createElement(\"div\", {\n    className: \"login-form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, isValid ? null : React.createElement(\"div\", {\n    className: \"login-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Please Enter the Correct Credentials\")), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    placeholder: \"Username\",\n    value: email,\n    onChange: e => onInputChange({\n      email: e.currentTarget.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => onInputChange({\n      password: e.currentTarget.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit\",\n    disabled: isDisabledButton || isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, isLoading ? 'Loading...' : 'Submit'))), isLoading ? React.createElement(\"div\", {\n    className: \"loader-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loader-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"Puff\",\n    color: \"rgb(72, 28, 64)\",\n    height: 100,\n    width: 100,\n    timeout: 3000 //3 secs\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \" \")) : null, React.createElement(\"div\", {\n    className: \"footer-logo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"footer-text-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Xebia Group \\xA9 2020. All rights reserved.\"));\n};","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/Views/loginPage.jsx"],"names":["React","isEmpty","toString","Loader","loginPages","payload","email","password","onInputChange","onSubmitHandler","isValid","isLoading","isDisabledButton","e","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,QAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAEnC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA,eAAlC;AAAmDC,IAAAA,OAAnD;AAA4DC,IAAAA;AAA5D,MAA0EN,OAAhF;AACA,QAAMO,gBAAgB,GAAIX,OAAO,CAACC,QAAQ,CAACI,KAAD,CAAT,CAAP,IAA4BL,OAAO,CAACC,QAAQ,CAACK,QAAD,CAAT,CAA7D;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,GAAG,IAAH,GAAU;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA7B,CADtB,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,UAAtB;AAAiC,IAAA,WAAW,EAAC,UAA7C;AAAwD,IAAA,KAAK,EAAEJ,KAA/D;AAAsE,IAAA,QAAQ,EAAGO,CAAD,IAAOL,aAAa,CAAC;AAAEF,MAAAA,KAAK,EAAEO,CAAC,CAACC,aAAF,CAAgBC;AAAzB,KAAD,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,UAA1B;AAAqC,IAAA,WAAW,EAAC,UAAjD;AAA4D,IAAA,KAAK,EAAER,QAAnE;AAA6E,IAAA,QAAQ,EAAGM,CAAD,IAAOL,aAAa,CAAC;AAAED,MAAAA,QAAQ,EAAEM,CAAC,CAACC,aAAF,CAAgBC;AAA5B,KAAD,CAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,EAAE,EAAC,QAAzB;AAAkC,IAAA,QAAQ,EAAEH,gBAAgB,IAAID,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4EA,SAAS,GAAG,YAAH,GAAkB,QAAvG,CAJJ,CADJ,CAHJ,EAaKA,SAAS,GACN;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,iBAFV;AAGI,IAAA,MAAM,EAAE,GAHZ;AAII,IAAA,KAAK,EAAE,GAJX;AAKI,IAAA,OAAO,EAAE,IALb,CAKmB;AALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,MADJ,CADM,GAaJ,IA1BV,EA4BI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EA6BI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA7BJ,CADJ;AAiCH,CAtCM","sourcesContent":["import React from 'react';\nimport { isEmpty, toString } from 'lodash';\nimport Loader from 'react-loader-spinner';\n\n\nexport const loginPages = (payload) => {\n\n    const { email, password, onInputChange, onSubmitHandler, isValid, isLoading } = payload;\n    const isDisabledButton = (isEmpty(toString(email)) || isEmpty(toString(password)));\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"logo-container\"></div>\n            <div className=\"login-text-container\">Help Desk Login</div>\n            <div className=\"login-form-container\">\n                <form onSubmit={onSubmitHandler}>\n                    {isValid ? null : <div className='login-error'><p>Please Enter the Correct Credentials</p></div>}\n                    <input type=\"text\" id=\"username\" placeholder=\"Username\" value={email} onChange={(e) => onInputChange({ email: e.currentTarget.value })} />\n                    <input type=\"password\" id=\"password\" placeholder=\"Password\" value={password} onChange={(e) => onInputChange({ password: e.currentTarget.value })} />\n                    <button type='submit' id=\"submit\" disabled={isDisabledButton || isLoading}>{isLoading ? 'Loading...' : 'Submit'}</button>\n                </form>\n\n\n            </div>\n            {isLoading ?\n                <div className=\"loader-wrapper\">\n                    <div className=\"loader-icon\">\n                        <Loader\n                            type=\"Puff\"\n                            color=\"rgb(72, 28, 64)\"\n                            height={100}\n                            width={100}\n                            timeout={3000} //3 secs\n\n                        /> </div>\n                </div>\n\n                : null\n            }\n            <div className=\"footer-logo-container\"></div>\n            <div className=\"footer-text-container\">Xebia Group Â© 2020. All rights reserved.</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
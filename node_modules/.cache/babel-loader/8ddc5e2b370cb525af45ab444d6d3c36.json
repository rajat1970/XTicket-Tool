{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/pages/LoginPage.js\";\nimport React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { constants } from '../modules/constants';\nimport { fetch } from '../modules/httpServices';\nimport { loginView as LoginView } from '../Views/loginView';\nimport { loginPages as LoginPages } from '../Views/loginPage';\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = payload => {\n      this.setState({ ...this.state,\n        ...payload\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      this.setState({\n        isLoading: true\n      }, () => {\n        fetch.post({\n          url: constants.SERVICE_URLS.LOGIN,\n          requestBody: {\n            email,\n            password\n          },\n          callbackHandler: response => {\n            console.log(response);\n            const {\n              status,\n              message,\n              payload\n            } = response;\n\n            const _state = cloneDeep(this.state);\n\n            _state.isLoading = false;\n\n            if (status === constants.SUCCESS) {\n              _state.message = '';\n              _state.isValid = true;\n              window.localStorage.setItem('_token', payload.token);\n              window.localStorage.setItem('_userInfo', JSON.stringify(payload.result));\n            } else {\n              _state.message = message;\n              _state.isValid = false;\n              window.localStorage.removeItem('_token');\n            }\n\n            this.setState(_state, this.redirectTicketList);\n          }\n        });\n      });\n    };\n\n    this.redirectTicketList = () => {\n      const token = window.localStorage.getItem('_token');\n\n      if (token != null) {\n        this.props.history.push('/ticketlist');\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      email: '',\n      password: '',\n      isValid: true\n    };\n  }\n\n  componentDidMount() {\n    this.redirectTicketList();\n  }\n\n  render() {\n    return (// <LoginView\n      //     {...{\n      //         ...this.state,\n      //         onInputChange: this.onInputChange,\n      //         onSubmitHandler: this.onSubmitHandler\n      //     }}\n      // />\n      React.createElement(LoginPages, Object.assign({ ...this.state,\n        onInputChange: this.onInputChange,\n        onSubmitHandler: this.onSubmitHandler\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/Web Develpoment/XYZ/XTicket-Tool/src/pages/LoginPage.js"],"names":["React","cloneDeep","constants","fetch","loginView","LoginView","loginPages","LoginPages","LoginPage","Component","constructor","props","onInputChange","payload","setState","state","onSubmitHandler","e","preventDefault","email","password","isLoading","post","url","SERVICE_URLS","LOGIN","requestBody","callbackHandler","response","console","log","status","message","_state","SUCCESS","isValid","window","localStorage","setItem","token","JSON","stringify","result","removeItem","redirectTicketList","getItem","history","push","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,SAAS,IAAIC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,UAAU,IAAIC,UAAvB,QAAyC,oBAAzC;AAEA,eAAe,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,aAfmB,GAeFC,OAAD,IAAa;AACzB,WAAKC,QAAL,CAAc,EAAE,GAAG,KAAKC,KAAV;AAAiB,WAAGF;AAApB,OAAd;AACH,KAjBkB;;AAAA,SAmBnBG,eAnBmB,GAmBAC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKL,KAAjC;AAEA,WAAKD,QAAL,CAAc;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,MAAM;AACrClB,QAAAA,KAAK,CAACmB,IAAN,CAAW;AACPC,UAAAA,GAAG,EAAErB,SAAS,CAACsB,YAAV,CAAuBC,KADrB;AAEPC,UAAAA,WAAW,EAAE;AACTP,YAAAA,KADS;AAETC,YAAAA;AAFS,WAFN;AAMPO,UAAAA,eAAe,EAAGC,QAAD,IAAc;AAC3BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,kBAAM;AAAEG,cAAAA,MAAF;AAAUC,cAAAA,OAAV;AAAmBnB,cAAAA;AAAnB,gBAA+Be,QAArC;;AACA,kBAAMK,MAAM,GAAGhC,SAAS,CAAC,KAAKc,KAAN,CAAxB;;AAEAkB,YAAAA,MAAM,CAACZ,SAAP,GAAmB,KAAnB;;AAEA,gBAAIU,MAAM,KAAK7B,SAAS,CAACgC,OAAzB,EAAkC;AAC9BD,cAAAA,MAAM,CAACD,OAAP,GAAiB,EAAjB;AACAC,cAAAA,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACAC,cAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCzB,OAAO,CAAC0B,KAA9C;AACAH,cAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCE,IAAI,CAACC,SAAL,CAAe5B,OAAO,CAAC6B,MAAvB,CAAzC;AACH,aALD,MAKO;AACHT,cAAAA,MAAM,CAACD,OAAP,GAAiBA,OAAjB;AACAC,cAAAA,MAAM,CAACE,OAAP,GAAiB,KAAjB;AACAC,cAAAA,MAAM,CAACC,YAAP,CAAoBM,UAApB,CAA+B,QAA/B;AACH;;AAED,iBAAK7B,QAAL,CAAcmB,MAAd,EAAsB,KAAKW,kBAA3B;AAGH;AA3BM,SAAX;AA8BH,OA/BD;AAgCH,KAxDkB;;AAAA,SA0DnBA,kBA1DmB,GA0DE,MAAM;AACvB,YAAML,KAAK,GAAGH,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,QAA5B,CAAd;;AACA,UAAIN,KAAK,IAAI,IAAb,EAAmB;AACf,aAAK5B,KAAL,CAAWmC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACH;AACJ,KA/DkB;;AAEf,SAAKhC,KAAL,GAAa;AACTM,MAAAA,SAAS,EAAE,KADF;AAETF,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITe,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,kBAAL;AACH;;AAqDDK,EAAAA,MAAM,GAAG;AACL,WACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAC,UAAD,gBAAgB,EACZ,GAAG,KAAKlC,KADI;AAEZH,QAAAA,aAAa,EAAE,KAAKA,aAFR;AAGZI,QAAAA,eAAe,EAAE,KAAKA;AAHV,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAcH;;AAlFkD","sourcesContent":["import React from 'react';\nimport { cloneDeep } from 'lodash';\nimport { constants } from '../modules/constants';\nimport { fetch } from '../modules/httpServices';\nimport { loginView as LoginView } from '../Views/loginView';\nimport { loginPages as LoginPages } from '../Views/loginPage';\n\nexport default class LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            email: '',\n            password: '',\n            isValid: true\n        };\n    }\n\n    componentDidMount() {\n        this.redirectTicketList();\n    }\n\n\n    onInputChange = (payload) => {\n        this.setState({ ...this.state, ...payload });\n    }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        const { email, password } = this.state;\n\n        this.setState({ isLoading: true }, () => {\n            fetch.post({\n                url: constants.SERVICE_URLS.LOGIN,\n                requestBody: {\n                    email,\n                    password\n                },\n                callbackHandler: (response) => {\n                    console.log(response)\n                    const { status, message, payload } = response;\n                    const _state = cloneDeep(this.state);\n\n                    _state.isLoading = false;\n\n                    if (status === constants.SUCCESS) {\n                        _state.message = '';\n                        _state.isValid = true;\n                        window.localStorage.setItem('_token', payload.token);\n                        window.localStorage.setItem('_userInfo', JSON.stringify(payload.result));\n                    } else {\n                        _state.message = message;\n                        _state.isValid = false;\n                        window.localStorage.removeItem('_token');\n                    }\n\n                    this.setState(_state, this.redirectTicketList);\n\n\n                }\n            });\n\n        });\n    }\n\n    redirectTicketList = () => {\n        const token = window.localStorage.getItem('_token');\n        if (token != null) {\n            this.props.history.push('/ticketlist');\n        }\n    }\n\n    render() {\n        return (\n            // <LoginView\n            //     {...{\n            //         ...this.state,\n            //         onInputChange: this.onInputChange,\n            //         onSubmitHandler: this.onSubmitHandler\n            //     }}\n            // />\n            <LoginPages {...{\n                ...this.state,\n                onInputChange: this.onInputChange,\n                onSubmitHandler: this.onSubmitHandler\n            }} />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}